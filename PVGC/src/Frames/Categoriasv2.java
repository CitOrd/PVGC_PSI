/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Control.ControlDetalleOrden;
import Control.ControlOrden;
import Control.ControlProducto;
import Dominio.DetalleOrden;
import Dominio.Orden;
import Dominio.Producto;
import com.sun.org.apache.bcel.internal.generic.AALOAD;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author R2
 */
public class Categoriasv2 extends FrmBase {

    DefaultListModel modeloListaMenu;
    DefaultListModel modeloListaPedido;
    ControlProducto controlProducto;
    List<Producto> pedido;
    List<DetalleOrden> detalles;

    /**
     * Creates new form Categoriasv2
     */
    public Categoriasv2() {
        initComponents();
        adaptarPantalla();
        controlProducto = new ControlProducto();
        pedido = new ArrayList<>();
        detalles = new ArrayList<>();

        modeloListaPedido = new DefaultListModel();
        try {
            cargarOrdenes();
        } catch (SQLException ex) {
            Logger.getLogger(Categoriasv2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public Categoriasv2(List<Producto> pedido, List<DetalleOrden> detalles) {
        initComponents();
        adaptarPantalla();
        controlProducto = new ControlProducto();
        this.pedido = pedido;
        this.detalles = detalles;
        modeloListaPedido = new DefaultListModel();
        try {
            cargarOrdenes();
        } catch (SQLException ex) {
            Logger.getLogger(Categoriasv2.class.getName()).log(Level.SEVERE, null, ex);
        }
        agregarPedidos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPPrincipal = new javax.swing.JPanel();
        btnAddNota = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();
        lblListaOrdenes1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListPedido = new javax.swing.JList<>();
        lblTitulo = new javax.swing.JLabel();
        lblSeparacion = new javax.swing.JLabel();
        lblBusqueda = new javax.swing.JLabel();
        tfBusqueda = new javax.swing.JTextField();
        lblListaOrdenes = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListProductos = new javax.swing.JList<>();
        btnFinalizarOrden = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JPPrincipal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAddNota.setText("Agregar nota");
        btnAddNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNotaActionPerformed(evt);
            }
        });
        JPPrincipal.add(btnAddNota, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 430, -1, -1));

        btnQuitar.setText("Quitar");
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });
        JPPrincipal.add(btnQuitar, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 380, 100, -1));

        lblListaOrdenes1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblListaOrdenes1.setForeground(new java.awt.Color(255, 255, 255));
        lblListaOrdenes1.setText("Pedido:");
        JPPrincipal.add(lblListaOrdenes1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 220, -1, -1));

        jScrollPane2.setViewportView(ListPedido);

        JPPrincipal.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, 260, 610));

        lblTitulo.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setText("Tomar pedido");
        JPPrincipal.add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, -1, -1));

        lblSeparacion.setForeground(new java.awt.Color(255, 255, 255));
        lblSeparacion.setText("___________________________________________________________________________________________________________________________________________________________________________");
        JPPrincipal.add(lblSeparacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 86, 1420, -1));

        lblBusqueda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblBusqueda.setForeground(new java.awt.Color(255, 255, 255));
        lblBusqueda.setText("Ingrese el producto que desea buscar:");
        JPPrincipal.add(lblBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 370, 32));

        tfBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfBusquedaKeyTyped(evt);
            }
        });
        JPPrincipal.add(tfBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 270, 32));

        lblListaOrdenes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblListaOrdenes.setForeground(new java.awt.Color(255, 255, 255));
        lblListaOrdenes.setText("Menu:");
        JPPrincipal.add(lblListaOrdenes, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 222, -1, -1));

        ListProductos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ListProductos);

        JPPrincipal.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, 270, 606));

        btnFinalizarOrden.setText("Finalizar orden");
        btnFinalizarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarOrdenActionPerformed(evt);
            }
        });
        JPPrincipal.add(btnFinalizarOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(953, 813, 120, 40));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/fondoMenuAdministarVenta.png"))); // NOI18N
        JPPrincipal.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -90, 1490, 1270));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 900, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBusquedaKeyTyped
        tfBusqueda.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent ke) {

                tfBusqueda.setText(tfBusqueda.getText().replaceAll("\\p{javaSpaceChar}{2,}", " "));

                if (!tfBusqueda.getText().equals("")) {

                    List<Producto> productos = controlProducto.consultarProductoPorNombre(tfBusqueda.getText());
                    if (productos != null && productos.size() > 0) {
                        modeloListaMenu = new DefaultListModel();

                        for (Producto producto : productos) {
                            modeloListaMenu.addElement(producto.getNombre());
                        }
                        ListProductos.setModel(modeloListaMenu);

                    }
                } else {

                    try {
                        cargarOrdenes();
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }

                }

            }
        });
    }//GEN-LAST:event_tfBusquedaKeyTyped

    private void ListProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListProductosMouseClicked
        this.agregarPedido();
    }//GEN-LAST:event_ListProductosMouseClicked

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        quitarPedido();
    }//GEN-LAST:event_btnQuitarActionPerformed

    private void btnAddNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNotaActionPerformed
        boolean contiene = false;
        int index = 0;
        String nombre = ListPedido.getSelectedValue();

        for (DetalleOrden detalle : detalles) {

            if (detalle.getProducto().getNombre().equals(nombre)) {
                contiene = true;
                break;
            }
            index++;
        }

        if (!contiene) {
            this.dispose();
            Producto producto = controlProducto.consultarProductoPorNombre(nombre).get(0);
            DetalleOrden detalle = new DetalleOrden();
            detalle.setProducto(producto);
            this.detalles.add(detalle);
            new AgregarNotasProd(pedido, detalles).setVisible(true);
        } else {
            this.dispose();
            new AgregarNotasProd(pedido, detalles, index).setVisible(true);
        }
    }//GEN-LAST:event_btnAddNotaActionPerformed

    private void btnFinalizarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarOrdenActionPerformed
        llenarDetOrdenes();
        new DetalladoOrden(pedido,detalles).setVisible(true);
    }//GEN-LAST:event_btnFinalizarOrdenActionPerformed

    private void cargarOrdenes() throws SQLException {
        List<Producto> productos = this.controlProducto.consultarProducto();
        if (productos != null && productos.size() > 0) {
            modeloListaMenu = new DefaultListModel();
            for (Producto producto : productos) {
                modeloListaMenu.addElement(producto.getNombre());
            }
            ListProductos.setModel(modeloListaMenu);
        }
    }

    private void agregarPedido() {
        String nombre = ListProductos.getSelectedValue();
        Producto producto = controlProducto.consultarProductoPorNombre(nombre).get(0);

        if (!pedido.contains(producto)) {
            pedido.add(producto);
            modeloListaPedido.addElement(producto.getNombre());
            ListPedido.setModel(modeloListaPedido);
        }

    }

    private void agregarPedidos() {

        if (!pedido.isEmpty()) {
            for (Producto producto : pedido) {
                modeloListaPedido.addElement(producto.getNombre());
            }
            ListPedido.setModel(modeloListaPedido);
        }

    }

    private void quitarPedido() {
        String nombre = ListPedido.getSelectedValue();
        int index = ListPedido.getSelectedIndex();
        Producto producto = controlProducto.consultarProductoPorNombre(nombre).get(0);
        pedido.remove(producto);
        modeloListaPedido.remove(index);
        ListPedido.setModel(modeloListaPedido);
    }

    private void llenarDetOrdenes() {

        if (detalles.size() >= 1) {
            
            int size = detalles.size();

            for (int i = 0; i < pedido.size(); i++) {

                for (int j = 0; j < size; j++) {
                    
                    if (!(detalles.get(j).getProducto().getNombre().equals(pedido.get(i).getNombre()))) {
                        DetalleOrden detalle = new DetalleOrden();
                        detalle.setCantidad(1);
                        detalle.setProducto(pedido.get(i));
                        detalle.setNotas(null);
                        detalle.setTotal(pedido.get(i).getPrecio());
                        detalles.add(detalle);
                        break;
                    }

                }

            }

        } else {

            for (int i = 0; i < pedido.size(); i++) {
                DetalleOrden detalle = new DetalleOrden();
                detalle.setCantidad(1);
                detalle.setProducto(pedido.get(i));
                detalle.setNotas(null);
                detalle.setTotal(pedido.get(i).getPrecio());
                detalles.add(detalle);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Categoriasv2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Categoriasv2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Categoriasv2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Categoriasv2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Categoriasv2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPPrincipal;
    private javax.swing.JList<String> ListPedido;
    private javax.swing.JList<String> ListProductos;
    private javax.swing.JButton btnAddNota;
    private javax.swing.JButton btnFinalizarOrden;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBusqueda;
    private javax.swing.JLabel lblListaOrdenes;
    private javax.swing.JLabel lblListaOrdenes1;
    private javax.swing.JLabel lblSeparacion;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextField tfBusqueda;
    // End of variables declaration//GEN-END:variables
}
